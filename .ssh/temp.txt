./ec2-ssh.sh
sudo docker exec -it mysql-server sh
ls
cd etc
ls
cat my.cnf
ls
cd mysql
ls
cd conf.d
ls
rm -r ./my.cnf
exit
cd mysql
ls

vim mysql-compose.yml
i

version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-server
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1q2w3e4r!
      TZ: Asia/Seoul
    ports:
      - "3306:3306"
    volumes:
      - ./data:/var/lib/mysql
      - ./conf.d:/etc/mysql/conf.d

:wq
sudo docker-compose -f mysql-compose.yml down
sudo docker-compose -f mysql-compose.yml up -d
ls
sudo rm -r my.cnf
cd conf.d
sudo vim my.cnf

log_bin_trust_function_creators = 1
default-time-zone = "Asia/Seoul"

:wq

cd ../ (mysqlë¡œ)

sudo docker pull doosan5464/mcdonald-kiosk-react-app:latest
sudo docker images

sudo docker run --name react-app -p 80:80 -d doosan5464/mcdonald-kiosk-react-app:latest
54.180.177.139



services:
  react:
    image: doosan5464/mcdonald-kiosk-react-app:latest
    container_name: react-app
        restart: always
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - /home/ubuntu/project/nginx/default.conf:/etc/nginx/conf.d/default.conf
        networks:
          - app-network

networks:
  app-network:
    driver: bridge




HTTPS
sudo apt install certbot
sudo certbot certonly --manual --preferred-challenges dns -d kioskstudents.store
doosan5464@gmail.com



sudo vim ./nginx/default.conf

server {
        listen 443 ssl;
        server_name kioskstudents.store;

        ssl_certificate /etc/letsencrypt/live/kioskstudents.store/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/kioskstudents.store/privkey.pem;

        root /usr/share/nginx/html;

        location ~ ^/(api|oauth2|login|image)/ {
                proxy_pass http://spring:8080;
                proxy_set_header Host $host;
                proxy_set_header X-Real-Ip $remote_addr;
        }

        location / {
                try_files $uri /index.html;
        }
}

server {
        listen 80;
        server_name kioskstudents.store;
        return 301 https://$host$request_uri;
}

docker build -t doosan5464/mcdonald-kiosk-react-app .
docker build -t doosan5464/mcdonald-kiosk-spring-app .

docker push doosan5464/mcdonald-kiosk-react-app:latest
docker push doosan5464/mcdonald-kiosk-spring-app:latest

sudo docker pull doosan5464/mcdonald-kiosk-react-app:latest
sudo docker pull doosan5464/mcdonald-kiosk-spring-app:latest




          spring:
            config:
              activate:
                on-profile: secret
          
            datasource:
              driver-class-name: com.mysql.cj.jdbc.Driver
              url: jdbc:mysql://${{ secrets.EC2_PUBLIC_IP }}:3306/${{ secrets.DATABASE_NAME }}
              username: ${{ secrets.DATABASE_USERNAME }}
              password: ${{ secrets.DATABASE_PASSWORD }}
          
            security:
              oauth2:
                client:
                  registration:
                    google:
                      client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
                      client-secret: ${{ secrets.GOOGLE_CLIENT_PASSWORD }}
                    naver:
                      client-id: ${{ secrets.NAVER_CLIENT_ID }}
                      client-secret: l${{ secrets.NAVER_CLIENT_PASSWORD }}
          
          
            jwt:
              secret: ${{ secrets.JWT }}